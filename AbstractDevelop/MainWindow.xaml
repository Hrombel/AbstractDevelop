<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:AbstractDevelop"
        
        xmlns:lang="http://gu.se/Localization"
        xmlns:p="clr-namespace:AbstractDevelop.Properties"
        
        x:Name="window" x:Class="AbstractDevelop.MainWindow"
        mc:Ignorable="d"
        
        Title="AbstractDevelop (RISC R8 Engine)" MinWidth="600" MinHeight="450" Height="300" Width="300"
        DataContext="{Binding Machine, RelativeSource={RelativeSource Self}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Graphics.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:FormatConverter x:Key="FormatConverter"/>

            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="4, 0"/>
            </Style>

            <Style TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <DataTemplate x:Key="MemoryTemplate">
                <DataTemplate.Resources>
                    <Style TargetType="TextBox">
                        <Style.Setters>
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="AntiqueWhite"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            
                            <Setter Property="IsReadOnly" Value="{Binding Machine.IsActive, ElementName=window, Mode=OneWay}"/>
                            <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
                        </Style.Setters>
                    </Style>
                </DataTemplate.Resources>

                <StackPanel Orientation="Vertical" Margin="8" Width="150">
                    <Label Content="{Binding ID}" HorizontalAlignment="Right"/>
                    <Border BorderBrush="Black" BorderThickness="2" CornerRadius="5">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FF1EC9E4" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>

                        <Border.Effect>
                            <DropShadowEffect/>
                        </Border.Effect>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBox x:Name="formattedValue" Grid.Row="0" FontSize="24" Text="{Binding Value, Converter={StaticResource FormatConverter}, ConverterParameter={p:Settings NumberFormat}, ValidatesOnExceptions=True}"/>
                            <TextBox x:Name="plainValue"     Grid.Row="1" FontSize="12" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>
                        </Grid>
                    </Border>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <!-- Команды из меню "Файл" -->
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommandExecuted"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommandExecuted"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommandExecuted" CanExecute="SaveCanExecute"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="SaveAsCommandExecuted"/>
        <CommandBinding Command="{x:Static local:CustomCommands.FileClose}" Executed="FileCloseCommandExecuted" CanExecute="FileCloseCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandExecuted"/>
        <!-- Команды из меню "Правка" -->
        <CommandBinding Command="ApplicationCommands.Undo" Executed="UndoCommandExecuted" CanExecute="UndoCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Redo" Executed="RedoCommandExecuted" CanExecute="RedoCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Copy" Executed="CopyCommandExecuted" CanExecute="CopyCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Cut" Executed="CutCopyExecuted" CanExecute="CutCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Paste" Executed="PasteCommandExecuted" CanExecute="PasteCanExecute"/>
        <!-- Команды из меню "Вид" -->
        <CommandBinding Command="{x:Static local:CustomCommands.CustomizeLayout}" Executed="CustomizeLayoutCommandExecuted"/>
        <CommandBinding Command="{x:Static local:CustomCommands.SelectFormat}" Executed="SelectFormatCommandExecuted"/>
        <CommandBinding Command="{x:Static local:CustomCommands.ClearAll}" Executed="ClearAllCommandExecuted"/>
        <CommandBinding Command="{x:Static local:CustomCommands.ClearDebug}" Executed="ClearDebugCommandExecuted" CanExecute="ClearDebugCanExecute"/>
        <!-- Команды из меню "Инструменты" -->
        <CommandBinding Command="{x:Static local:CustomCommands.DebugStartStop}" Executed="DebugStartStopCommandExecuted"/>
        <CommandBinding Command="{x:Static local:CustomCommands.DebugStep}" Executed="DebugStepCommandExecuted" CanExecute="DebugStepCanExecute"/>
        <CommandBinding Command="{x:Static local:CustomCommands.DebugPause}" Executed="DebugPauseCommandExecuted" CanExecute="DebugPauseCanExecute"/>
        <CommandBinding Command="{x:Static local:CustomCommands.DebugBreakpoint}" Executed="DebugBreakpointCommandExecuted" CanExecute="DebugBreakpointCanExecute"/>
        
        <!-- Команды из меню "Справка" -->
        <CommandBinding Command="ApplicationCommands.Help" Executed="HelpCommandExecuted"/>
    </Window.CommandBindings>

    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="menuRow" Height="Auto"/>
            <RowDefinition x:Name="memoryRow"/>
            <RowDefinition x:Name="splitterRow1" Height="Auto"/>
            <RowDefinition x:Name="editorRow"/>
            <RowDefinition x:Name="splitterRow2" Height="Auto"/>
            <RowDefinition x:Name="debugRow"/>
        </Grid.RowDefinitions>

        <!-- Главное меню -->
        <StackPanel Grid.Row="0">
            <Menu x:Name="mainMenu">
                <MenuItem Header="{lang:Static p:Menu.FileMenu}">
                    <MenuItem Header="{lang:Static p:Menu.FileNew}" Command="ApplicationCommands.New"/>
                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.FileOpen}" Command="ApplicationCommands.Open"/>
                    <MenuItem Header="{lang:Static p:Menu.FileSave}" Command="ApplicationCommands.Save"/>
                    <MenuItem Header="{lang:Static p:Menu.FileSaveAs}" Command="ApplicationCommands.SaveAs"/>
                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.FileClose}" Command="{x:Static local:CustomCommands.FileClose}"/>
                    <MenuItem Header="{lang:Static p:Menu.FileExit}" Command="ApplicationCommands.Close"/>
                </MenuItem>
                <MenuItem Header="{lang:Static p:Menu.Edit}">
                    <MenuItem Header="{lang:Static p:Menu.EditUndo}" Command="ApplicationCommands.Undo"/>
                    <MenuItem Header="{lang:Static p:Menu.EditRedo}" Command="ApplicationCommands.Redo"/>
                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.EditCopy}" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="{lang:Static p:Menu.EditCut}" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="{lang:Static p:Menu.EditPaste}" Command="ApplicationCommands.Paste"/>
                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.ClearDebug}" Command="{x:Static local:CustomCommands.ClearDebug}"/>
                    <MenuItem Header="{lang:Static p:Menu.ClearAll}" Command="{x:Static local:CustomCommands.ClearAll}"/>
                </MenuItem>
                <MenuItem Header="{lang:Static p:Menu.View}">
                    <MenuItem Header="{lang:Static p:Menu.NumberFormat}">
                        <RadioButton x:Name="binaryFormat" Content="{lang:Static p:Menu.ViewBinary}" Command="{x:Static local:CustomCommands.SelectFormat}"/>
                        <RadioButton x:Name="octalFormat" Content="{lang:Static p:Menu.ViewOctal}" Command="{x:Static local:CustomCommands.SelectFormat}"/>
                        <RadioButton x:Name="hexFormat" Content="{lang:Static p:Menu.ViewHex}" Command="{x:Static local:CustomCommands.SelectFormat}"/>
                        <MenuItem x:Name="formatShowPrefix" Header="{lang:Static p:Menu.ViewShowPrefix}" Click="formatShowPrefix_Click" IsCheckable="True"/>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.ShowMemoryEditor}" IsCheckable="True" Command="{x:Static local:CustomCommands.CustomizeLayout}"/>
                    <MenuItem Header="{lang:Static p:Menu.ShowCodeEditor}" IsCheckable="True"  Command="{x:Static local:CustomCommands.CustomizeLayout}"/>
                    <MenuItem Header="{lang:Static p:Menu.ShowRegisterEditor}" IsCheckable="True"  Command="{x:Static local:CustomCommands.CustomizeLayout}"/>
                    <MenuItem Header="{lang:Static p:Menu.ShowDebugOutput}" IsCheckable="True"  Command="{x:Static local:CustomCommands.CustomizeLayout}"/>

                </MenuItem>
                <MenuItem Header="{lang:Static p:Menu.Tools}">
                    <MenuItem Header="{lang:Static p:Menu.Debug}">
                        <MenuItem Header="{lang:Static p:Menu.DebugStart}"  Command="{x:Static local:CustomCommands.DebugStartStop}"/>
                        <MenuItem Header="{lang:Static p:Menu.DebugStep}" Command="{x:Static local:CustomCommands.DebugStep}"/>
                        <MenuItem Header="{lang:Static p:Menu.DebugPause}" Command="{x:Static local:CustomCommands.DebugPause}"/>
                        <MenuItem Header="{lang:Static p:Menu.DebugPause}" Command="{x:Static local:CustomCommands.DebugPause}"/>
                        <MenuItem Header="{lang:Static p:Menu.DebugBreakpoint}" Command="{x:Static local:CustomCommands.DebugBreakpoint}"/>
                        
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.ToolsSchema}" Click="OpenSchemaMenuCommand"/>
                    <MenuItem Header="{lang:Static p:Menu.ToolsTesting}" Click="OpenTestSystemMenuCommand"/>

                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.Settings}" Command="ApplicationCommands.Properties"/>
                </MenuItem>
                <MenuItem Header="{lang:Static p:Menu.Help}">
                    <MenuItem Header="{lang:Static p:Menu.HelpContent}" Command="ApplicationCommands.Help"/>
                    <MenuItem Header="{lang:Static p:Menu.HelpSamples}" Click="OpenSamplesMenuCommand"/>
                    <Separator/>

                    <MenuItem Header="{lang:Static p:Menu.HelpAbout}" Click="OpenHelpAboutMenuCommand" />
                </MenuItem>
            </Menu>
            <ToolBarTray IsLocked="True">
                <ToolBarTray.Resources>
                    <Style x:Key="toolButton" TargetType="Button">
                        <Style.Setters>
                            <Setter Property="Width" Value="30"/>
                            <Setter Property="Height" Value="30"/>
                        </Style.Setters>
                    </Style>
                </ToolBarTray.Resources>
                <ToolBar>
                    <Button Command="ApplicationCommands.New" Style="{DynamicResource toolButton}" Background="{DynamicResource documentnew}"/>
                    <Button Command="ApplicationCommands.Open" Style="{DynamicResource toolButton}" Background="{DynamicResource documentopen}"/>
                    <Button Command="ApplicationCommands.Save" Style="{DynamicResource toolButton}" Background="{DynamicResource documentsave}"/>
                    <Separator/>
                    <Button Command="ApplicationCommands.Undo" Style="{DynamicResource toolButton}" Background="{DynamicResource undo}"/>
                    <Button Command="ApplicationCommands.Redo" Style="{DynamicResource toolButton}" Background="{DynamicResource redo}"/>
                    <Separator/>
                    <Button Command="ApplicationCommands.Cut" Style="{DynamicResource toolButton}" Background="{DynamicResource editcut}"/>
                    <Button Command="ApplicationCommands.Copy" Style="{DynamicResource toolButton}" Background="{DynamicResource editcopy}"/>
                    <Button Command="ApplicationCommands.Paste" Style="{DynamicResource toolButton}" Background="{DynamicResource editpaste}"/>
                    <Separator/>
                    <Button Command="{x:Static local:CustomCommands.DebugStartStop}" Style="{DynamicResource toolButton}" Background="{DynamicResource run}"/>
                    <Button Command="{x:Static local:CustomCommands.DebugStartStop}" Style="{DynamicResource toolButton}" Background="{DynamicResource editpaste}"/>
                    <Button Command="{x:Static local:CustomCommands.DebugStep}" Style="{DynamicResource toolButton}" Background="{DynamicResource step}"/>
                    <Button Command="{x:Static local:CustomCommands.DebugPause}" Style="{DynamicResource toolButton}" Background="{DynamicResource rewind}"/>
                    <Separator/>
                    <Button Command="ApplicationCommands.Help" Style="{DynamicResource toolButton}" Background="{DynamicResource help}"/>
                </ToolBar>
            </ToolBarTray>
        </StackPanel>

        <GroupBox Header="{lang:Static p:Labels.MemoryEditor}" Grid.Row="1" >
            <ScrollViewer>
                <ItemsControl x:Name="memory" ItemTemplate="{DynamicResource MemoryTemplate}" ItemsSource="{Binding Memory}" HorizontalContentAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:AlignableWrapPanel x:Name="memoryPanel" HorizontalAlignment="Center" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </GroupBox>

        <GridSplitter Grid.Row="2" Height="3" HorizontalAlignment="Stretch" />

        <Grid x:Name="editorGrid" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="codeColumn" Width="2*"/>
                <ColumnDefinition x:Name="registerColumn"/>
            </Grid.ColumnDefinitions>

            <GroupBox Header="{lang:Static p:Labels.CodeEditor}" Grid.Column="0">
                <local:CodeEditor x:Name="codeEditor" IsReadonly="{Binding IsActive}"/>
            </GroupBox>

            <GridSplitter Width="3"/>

            <GroupBox Header="{lang:Static p:Labels.Registers}" Grid.Column="1">
                <DataGrid x:Name="registers" AutoGenerateColumns="False" ItemsSource="{Binding Registers}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{lang:Static p:Labels.RegistersColumnID}" Binding="{Binding ID}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{lang:Static p:Labels.RegistersColumnValue}" Width="*" Binding="{Binding Value}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
        </Grid>

        <GridSplitter Grid.Row="4" Height="3" HorizontalAlignment="Stretch" />

        <GroupBox x:Name="debugOutputGroup" Grid.Row="5" Header="{lang:Static p:Labels.Debug}">
            <DataGrid x:Name="debugOutputData" AutoGenerateColumns="False" EnableColumnVirtualization="True" lang:ErrorHandling.Mode="ReturnErrorInfoPreserveNeutral" GridLinesVisibility="Horizontal" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="typeColumn" Header="{lang:Static p:Labels.DebugType}"/>
                    <DataGridTextColumn x:Name="lineColumn" Header="{lang:Static p:Labels.DebugLine}"/>
                    <DataGridTextColumn x:Name="messageColumn" Header="{lang:Static p:Labels.DebugMessage}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
    </Grid>
</Window>
